"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9434],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return f}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var l=a.createContext({}),p=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=p(e.components);return a.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),d=p(n),f=r,m=d["".concat(l,".").concat(f)]||d[f]||u[f]||i;return n?a.createElement(m,o(o({ref:t},c),{},{components:n})):a.createElement(m,o({ref:t},c))}));function f(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var p=2;p<i;p++)o[p]=n[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},8215:function(e,t,n){var a=n(7294);t.Z=function(e){var t=e.children,n=e.hidden,r=e.className;return a.createElement("div",{role:"tabpanel",hidden:n,className:r},t)}},1395:function(e,t,n){n.d(t,{Z:function(){return l}});var a=n(7294),r=n(944),i=n(6010),o="tabItem_1uMI",s="tabItemActive_2DSg";var l=function(e){var t,n=e.lazy,l=e.block,p=e.defaultValue,c=e.values,u=e.groupId,d=e.className,f=a.Children.toArray(e.children),m=null!=c?c:f.map((function(e){return{value:e.props.value,label:e.props.label}})),g=null!=p?p:null==(t=f.find((function(e){return e.props.default})))?void 0:t.props.value,h=(0,r.Z)(),k=h.tabGroupChoices,v=h.setTabGroupChoices,b=(0,a.useState)(g),y=b[0],I=b[1],w=[];if(null!=u){var S=k[u];null!=S&&S!==y&&m.some((function(e){return e.value===S}))&&I(S)}var O=function(e){var t=e.currentTarget,n=w.indexOf(t),a=m[n].value;I(a),null!=u&&(v(u,a),setTimeout((function(){var e,n,a,r,i,o,l,p;(e=t.getBoundingClientRect(),n=e.top,a=e.left,r=e.bottom,i=e.right,o=window,l=o.innerHeight,p=o.innerWidth,n>=0&&i<=p&&r<=l&&a>=0)||(t.scrollIntoView({block:"center",behavior:"smooth"}),t.classList.add(s),setTimeout((function(){return t.classList.remove(s)}),2e3))}),150))},N=function(e){var t,n=null;switch(e.key){case"ArrowRight":var a=w.indexOf(e.target)+1;n=w[a]||w[0];break;case"ArrowLeft":var r=w.indexOf(e.target)-1;n=w[r]||w[w.length-1]}null==(t=n)||t.focus()};return a.createElement("div",{className:"tabs-container"},a.createElement("ul",{role:"tablist","aria-orientation":"horizontal",className:(0,i.Z)("tabs",{"tabs--block":l},d)},m.map((function(e){var t=e.value,n=e.label;return a.createElement("li",{role:"tab",tabIndex:y===t?0:-1,"aria-selected":y===t,className:(0,i.Z)("tabs__item",o,{"tabs__item--active":y===t}),key:t,ref:function(e){return w.push(e)},onKeyDown:N,onFocus:O,onClick:O},null!=n?n:t)}))),n?(0,a.cloneElement)(f.filter((function(e){return e.props.value===y}))[0],{className:"margin-vert--md"}):a.createElement("div",{className:"margin-vert--md"},f.map((function(e,t){return(0,a.cloneElement)(e,{key:t,hidden:e.props.value!==y})}))))}},9443:function(e,t,n){var a=(0,n(7294).createContext)(void 0);t.Z=a},944:function(e,t,n){var a=n(7294),r=n(9443);t.Z=function(){var e=(0,a.useContext)(r.Z);if(null==e)throw new Error('"useUserPreferencesContext" is used outside of "Layout" component.');return e}},8427:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return u},default:function(){return f}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o=n(1395),s=n(8215),l={sidebar_position:3,title:"Building menuboard detection with in-geofence tracking options"},p=void 0,c={unversionedId:"tutorials/building-menuboard-detection-with-in-geofence-tracking-options",id:"tutorials/building-menuboard-detection-with-in-geofence-tracking-options",isDocsHomePage:!1,title:"Building menuboard detection with in-geofence tracking options",description:"In this tutorial, we show you how to use in-geofence tracking options to build reliable, high-accuracy drive-thru menuboard detection while remaining battery efficient.",source:"@site/docs/tutorials/building-menuboard-detection-with-in-geofence-tracking-options.mdx",sourceDirName:"tutorials",slug:"/tutorials/building-menuboard-detection-with-in-geofence-tracking-options",permalink:"/tutorials/building-menuboard-detection-with-in-geofence-tracking-options",editUrl:"https://github.com/radarlabs/docs/edit/main/docs/tutorials/building-menuboard-detection-with-in-geofence-tracking-options.mdx",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3,title:"Building menuboard detection with in-geofence tracking options"},sidebar:"defaultSidebar",previous:{title:"Building an on-premise mode",permalink:"/tutorials/building-an-on-premise-mode"},next:{title:"Showing a notification when a user enters a geofence",permalink:"/tutorials/showing-a-notification-when-a-user-enters-a-geofence"}},u=[{value:"Steps",id:"steps",children:[{value:"Step 1: Sign up for Radar",id:"step-1-sign-up-for-radar",children:[]},{value:"Step 2: Create geofences",id:"step-2-create-geofences",children:[]},{value:"Step 3: Initialize the SDK",id:"step-3-initialize-the-sdk",children:[]},{value:"Step 4: Request foreground permissions",id:"step-4-request-foreground-permissions",children:[]},{value:"Step 5. Configure remote tracking options",id:"step-5-configure-remote-tracking-options",children:[]},{value:"Step 6. Start tracking and start a trip",id:"step-6-start-tracking-and-start-a-trip",children:[]}]}],d={toc:u};function f(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In this tutorial, we show you how to use in-geofence tracking options to build reliable, high-accuracy drive-thru menuboard detection while remaining battery efficient."),(0,i.kt)("h2",{id:"steps"},"Steps"),(0,i.kt)("h3",{id:"step-1-sign-up-for-radar"},"Step 1: Sign up for Radar"),(0,i.kt)("p",null,"If you haven't already, sign up for Radar to get your API key. You can create up to 1,000 geofences and make up to 100,000 API requests per month for free."),(0,i.kt)("a",{className:"btn btn-large btn-primary",href:"https://radar.com/signup"},"Get API keys"),(0,i.kt)("h3",{id:"step-2-create-geofences"},"Step 2: Create geofences"),(0,i.kt)("p",null,"There are several ways to create geofences:"),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"https://radar.com/dashboard/geofencing/geofences/new"},"Create geofence page")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/geofences#csv-import"},"CSV import")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("a",{parentName:"li",href:"/api#upsert-a-geofence"},"API"))),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"tag")," is a group for the geofence. In this tutorial, we'll create two geofences for each drive-thru, a large circular geofence with radius 500m with tag ",(0,i.kt)("inlineCode",{parentName:"p"},"ramp-up")," and a small, car-length polygon geofence in front of the menu board. "),(0,i.kt)("h3",{id:"step-3-initialize-the-sdk"},"Step 3: Initialize the SDK"),(0,i.kt)("p",null,"Initialize the SDK with your publishable API key."),(0,i.kt)(o.Z,{groupId:"initialize",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Kotlin",value:"kotlin"},{label:"React Native",value:"react-native"}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'import UIKit\nimport RadarSDK\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n  func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n    Radar.initialize(publishableKey: "prj_test_pk_...")\n    Radar.setUserId("foo")\n\n    return true\n  }\n\n}\n'))),(0,i.kt)(s.Z,{value:"kotlin",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'import io.radar.sdk.Radar\n\nclass MyApplication : Application() {\n\n  override fun onCreate() {\n    super.onCreate()\n\n    Radar.initialize(this, "prj_test_pk...")\n    Radar.setUserId("foo")\n  }\n\n}\n'))),(0,i.kt)(s.Z,{value:"react-native",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'import React, { useState, useEffect } from "react";\nimport Radar from "react-native-radar";\n\nexport default function App() {\n  Radar.initialize("prj_live_pk_...");\n  \n  useEffect(() => {\n    Radar.setUserId(userId)\n  }, [userId]);\n\n  return (\n    <div id="content">\n    </div>\n  );\n}\n')))),(0,i.kt)("h3",{id:"step-4-request-foreground-permissions"},"Step 4: Request foreground permissions"),(0,i.kt)(o.Z,{groupId:"initialize",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Kotlin",value:"kotlin"},{label:"React Native",value:"react-native"}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'import UIKit\nimport RadarSDK\nimport CoreLocation\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate, CLLocationManagerDelegate {\n\n  let locationManager = CLLocationManager()\n\n  func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n    Radar.initialize(publishableKey: "prj_test_pk_...")\n    Radar.setUserId("foo")\n\n    self.locationManager.delegate = self\n    self.requestLocationPermissions()\n\n    return true\n  }\n\n  func requestLocationPermissions() {\n    let status = self.locationManager.authorizationStatus\n\n    if status == .notDetermined {\n      self.locationManager.requestWhenInUseAuthorization()\n    }\n  }\n\n}\n'))),(0,i.kt)(s.Z,{value:"kotlin",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'import android.Manifest\nimport android.app.AlertDialog\nimport android.content.pm.PackageManager\nimport android.os.Build\n\nimport androidx.core.app.ActivityCompat\n\nimport io.radar.sdk.Radar\n\nclass MainActivity : AppCompatActivity() {\n  private val foregroundLocationPermissionsRequestCode = 1\n\n  override fun onCreate(savedInstanceState: Bundle?) {\n    super.onCreate(savedInstanceState)\n\n    Radar.initialize(this, "prj_test_pk_...")\n    Radar.setUserId("foo")\n\n    requestLocationPermissions()\n  }\n\n  private fun requestLocationPermissions() {\n    if (ActivityCompat.checkSelfPermission(this, Manifest.permission.ACCESS_FINE_LOCATION) != PackageManager.PERMISSION_GRANTED) {\n      ActivityCompat.requestPermissions(this, arrayOf(Manifest.permission.ACCESS_COARSE_LOCATION, Manifest.permission.ACCESS_FINE_LOCATION), foregroundLocationPermissionsRequestCode)\n    }\n  }\n\n}\n')),(0,i.kt)("p",null,"Because we'll be using the ",(0,i.kt)("inlineCode",{parentName:"p"},"continuous")," preset and a foreground service, make sure you include the ",(0,i.kt)("inlineCode",{parentName:"p"},"FOREGROUND_SERVICE_LOCATION")," permission in your ",(0,i.kt)("a",{parentName:"p",href:"/sdk/android#request-permissions"},"manifest"),".")),(0,i.kt)(s.Z,{value:"react-native",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'import React, { useState, useEffect } from "react";\nimport Radar from "react-native-radar";\n\nexport default function App() {\n  Radar.initialize("prj_live_pk_...");\n\n  useEffect(() => {\n    Radar.setUserId("foo")\n  }, [userId]);\n\n  let permissionStatus = await Radar.getPermissionStatus().then((permissionStatus)) \n\n  return (\n    <div id="content">\n    </div>\n  );\n}\n')),(0,i.kt)("p",null,"Learn about platform-specific permissions in the ",(0,i.kt)("a",{parentName:"p",href:"/sdk/ios#request-permissions"},"iOS SDK documentation")," and ",(0,i.kt)("a",{parentName:"p",href:"/sdk/android#request-permissions"},"Android SDK documentation"),"."))),(0,i.kt)("h3",{id:"step-5-configure-remote-tracking-options"},"Step 5. Configure remote tracking options"),(0,i.kt)("p",null,"In the Radar dashboard, navigate to the SDK configuration section in ",(0,i.kt)("a",{parentName:"p",href:"https://radar.com/dashboard/settings#sdk-configuration"},"settings"),'. Toggle on "Remotely set tracking options". Then toggle on "Enable on-trip tracking options" and set the "Tracking preset" to "Continuous". Toggle on "Enable in-geofence tracking options", set the "Tracking preset" to "Custom" and replace the JSON blob below with the following tracking options on iOS and Android respectively:'),(0,i.kt)(o.Z,{groupId:"initialize",defaultValue:"iOS",values:[{label:"iOS",value:"iOS"},{label:"Android",value:"Android"}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"iOS",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "desiredStoppedUpdateInterval": 3,\n  "desiredMovingUpdateInterval": 3,\n  "desiredSyncInterval": 2,\n  "desiredAccuracy": "high",\n  "stopDuration": 140,\n  "stopDistance": 70,\n  "sync": "all",\n  "replay": "stops",\n  "showBlueBar": true,\n  "useStoppedGeofence": true,\n  "stoppedGeofenceRadius": 100,\n  "useMovingGeofence": true,\n  "movingGeofenceRadius": 50,\n  "syncGeofences": true,\n  "useVisits": true,\n  "useSignificantLocationChanges": true,\n  "beacons": false\n}\n'))),(0,i.kt)(s.Z,{value:"Android",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'{\n  "desiredStoppedUpdateInterval": 3,\n  "fastestStoppedUpdateInterval": 3,\n  "desiredMovingUpdateInterval": 3,\n  "fastestMovingUpdateInterval": 3,\n  "desiredSyncInterval": 2,\n  "desiredAccuracy": 2,\n  "stopDuration": 140,\n  "stopDistance": 70,\n  "replay": 1,\n  "sync": 2,\n  "useStoppedGeofence": true,\n  "stoppedGeofenceRadius": 100,\n  "useMovingGeofence": true,\n  "movingGeofenceRadius": 100,\n  "syncGeofences": true,\n  "syncGeofencesLimit": 10,\n  "beacons": false,\n  "foregroundServiceEnabled": true\n}\n')))),(0,i.kt)("p",null,'In the field entitled "Geofence tags", input the tag of the geofence you created to trigger the increase in tracking frequency, ',(0,i.kt)("inlineCode",{parentName:"p"},"ramp-up"),"."),(0,i.kt)("h3",{id:"step-6-start-tracking-and-start-a-trip"},"Step 6. Start tracking and start a trip"),(0,i.kt)("p",null,'When the user places an order and taps "I\'m on my way," start tracking to start live location tracking, start a trip to the destination geofence. Use the order ID, in this case ',(0,i.kt)("inlineCode",{parentName:"p"},"456"),", for the trip ",(0,i.kt)("inlineCode",{parentName:"p"},"externalId"),"."),(0,i.kt)(o.Z,{groupId:"start-tracking",defaultValue:"swift",values:[{label:"Swift",value:"swift"},{label:"Kotlin",value:"kotlin"},{label:"React Native",value:"react-native"}],mdxType:"Tabs"},(0,i.kt)(s.Z,{value:"swift",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'let tripOptions = RadarTripOptions(externalId: "456")\ntripOptions.destinationGeofenceTag = "restaurant"\ntripOptions.destinationGeofenceExternalId = "123"\ntripOptions.mode = .car\nRadar.startTrip(options: tripOptions)\n'))),(0,i.kt)(s.Z,{value:"kotlin",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-kotlin"},'let tripOptions = RadarTripOptions("456")\ntripOptions.destinationGeofenceTag = "restaurant"\ntripOptions.destinationGeofenceExternalId = "123" \ntripOptions.mode = RadarRouteMode.CAR\nRadar.startTrip(tripOptions)\n'))),(0,i.kt)(s.Z,{value:"react-native",mdxType:"TabItem"},(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-javascript"},'const tripOptions = {\n  externalId: "456",\n  destinationGeofenceTag: "restaurant",\n  destinationGeofenceExternalId: "123",\n  mode: "car"\n};\nRadar.startTrip(tripOptions);\n')))),(0,i.kt)("p",null,"When a user is being tracked and enters the ",(0,i.kt)("inlineCode",{parentName:"p"},"ramp-up")," geofence, the SDK will increase the frequency of location updates. With the frequency and accuracy of the ramped-up tracking, you can accurately detect when a users enters a car-length geofence in front of a menuboard."),(0,i.kt)("p",null,(0,i.kt)("img",{className:"small",src:"https://images.ctfassets.net/f2vbu16fzuly/5wNbY1r5q3fUk2oZlIC76M/7465335fbd26c6a85b0116c7a356ef45/ramp-up.png"})))}f.isMDXComponent=!0},6010:function(e,t,n){function a(e){var t,n,r="";if("string"==typeof e||"number"==typeof e)r+=e;else if("object"==typeof e)if(Array.isArray(e))for(t=0;t<e.length;t++)e[t]&&(n=a(e[t]))&&(r&&(r+=" "),r+=n);else for(t in e)e[t]&&(r&&(r+=" "),r+=t);return r}function r(){for(var e,t,n=0,r="";n<arguments.length;)(e=arguments[n++])&&(t=a(e))&&(r&&(r+=" "),r+=t);return r}n.d(t,{Z:function(){return r}})}}]);