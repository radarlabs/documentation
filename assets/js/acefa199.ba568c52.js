"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4336],{3905:function(e,a,t){t.d(a,{Zo:function(){return d},kt:function(){return c}});var n=t(7294);function r(e,a,t){return a in e?Object.defineProperty(e,a,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[a]=t,e}function i(e,a){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);a&&(n=n.filter((function(a){return Object.getOwnPropertyDescriptor(e,a).enumerable}))),t.push.apply(t,n)}return t}function o(e){for(var a=1;a<arguments.length;a++){var t=null!=arguments[a]?arguments[a]:{};a%2?i(Object(t),!0).forEach((function(a){r(e,a,t[a])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):i(Object(t)).forEach((function(a){Object.defineProperty(e,a,Object.getOwnPropertyDescriptor(t,a))}))}return e}function l(e,a){if(null==e)return{};var t,n,r=function(e,a){if(null==e)return{};var t,n,r={},i=Object.keys(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||(r[t]=e[t]);return r}(e,a);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(n=0;n<i.length;n++)t=i[n],a.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=n.createContext({}),p=function(e){var a=n.useContext(s),t=a;return e&&(t="function"==typeof e?e(a):o(o({},a),e)),t},d=function(e){var a=p(e.components);return n.createElement(s.Provider,{value:a},e.children)},m={inlineCode:"code",wrapper:function(e){var a=e.children;return n.createElement(n.Fragment,{},a)}},u=n.forwardRef((function(e,a){var t=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),u=p(t),c=r,f=u["".concat(s,".").concat(c)]||u[c]||m[c]||i;return t?n.createElement(f,o(o({ref:a},d),{},{components:t})):n.createElement(f,o({ref:a},d))}));function c(e,a){var t=arguments,r=a&&a.mdxType;if("string"==typeof e||r){var i=t.length,o=new Array(i);o[0]=u;var l={};for(var s in a)hasOwnProperty.call(a,s)&&(l[s]=a[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,o[1]=l;for(var p=2;p<i;p++)o[p]=t[p];return n.createElement.apply(null,o)}return n.createElement.apply(null,t)}u.displayName="MDXCreateElement"},8894:function(e,a,t){t.r(a),t.d(a,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return s},toc:function(){return p},default:function(){return m}});var n=t(7462),r=t(3366),i=(t(7294),t(3905)),o={sidebar_position:13,title:"Displaying Radar Maps with Flutter"},l=void 0,s={unversionedId:"tutorials/displaying-radar-maps-with-flutter",id:"tutorials/displaying-radar-maps-with-flutter",isDocsHomePage:!1,title:"Displaying Radar Maps with Flutter",description:"To create a Flutter component with a map:",source:"@site/docs/tutorials/displaying-radar-maps-with-flutter.mdx",sourceDirName:"tutorials",slug:"/tutorials/displaying-radar-maps-with-flutter",permalink:"/tutorials/displaying-radar-maps-with-flutter",editUrl:"https://github.com/radarlabs/docs/edit/main/docs/tutorials/displaying-radar-maps-with-flutter.mdx",tags:[],version:"current",sidebarPosition:13,frontMatter:{sidebar_position:13,title:"Displaying Radar Maps with Flutter"},sidebar:"defaultSidebar",previous:{title:"Displaying Radar Maps with React Native",permalink:"/tutorials/displaying-radar-maps-with-react-native"},next:{title:"Create a custom map style",permalink:"/tutorials/create-a-custom-map-style"}},p=[{value:"Install",id:"install",children:[]},{value:"Radar Map",id:"radar-map",children:[]},{value:"Radar Map w/ Marker",id:"radar-map-w-marker",children:[]}],d={toc:p};function m(e){var a=e.components,o=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,n.Z)({},d,o,{components:a,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"To create a ",(0,i.kt)("a",{parentName:"p",href:"https://docs.flutter.dev/get-started/install"},"Flutter")," component with a map:"),(0,i.kt)("p",null,"The SDK has a dependency on ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/maplibre/flutter-maplibre-gl"},"maplibre_gl"),". See the source on GitHub ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/radarlabs/flutter-radar"},"here"),". Or, see the ",(0,i.kt)("inlineCode",{parentName:"p"},"flutter_radar")," package on pub.dev ",(0,i.kt)("a",{parentName:"p",href:"https://pub.dev/packages/flutter_radar"},"here"),"."),(0,i.kt)("h2",{id:"install"},"Install"),(0,i.kt)("p",null,"Add the package to your ",(0,i.kt)("inlineCode",{parentName:"p"},"pubspec.yaml")," file:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-yaml"},"dependencies:\n  flutter_radar: ^$RADAR_FLUTTER_SDK_VERSION$\n")),(0,i.kt)("p",null,"Then, update dependencies:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-bash"},"flutter pub get\n")),(0,i.kt)("p",null,"Next, complete any required ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/maplibre/flutter-maplibre-gl"},"platform-specific installation steps for maplibre_gl"),". "),(0,i.kt)("h2",{id:"radar-map"},"Radar Map"),(0,i.kt)("p",null,"Once installation is complete, initialize the Radar SDK and add a ",(0,i.kt)("inlineCode",{parentName:"p"},"MapLibreMap")," component:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},"import 'package:flutter/material.dart';\nimport 'package:maplibre_gl/maplibre_gl.dart';\n\nvoid main() {\n  runApp(RadarMapsDemo());\n}\n\nString style = \"radar-default-v1\"; // specify styleId here for custom Map style\nString publishableKey = \"prj_test_pk_...\";\n\nclass RadarMapsDemo extends StatelessWidget {\n  const RadarMapsDemo({super.key});\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        body: MapLibreMap(\n          styleString: 'https://api.radar.io/maps/styles/$style/?publishableKey=$publishableKey',\n          initialCameraPosition: const CameraPosition(\n            target: LatLng(40.7342891, -73.9910334), // initial position (Radar HQ)\n            zoom: 12.0,\n          ),\n          tiltGesturesEnabled: false,  // disable tilt gestures\n          rotateGesturesEnabled: false,  // disable rotate gestures\n          onMapCreated: (MapLibreMapController controller) {\n            // You can add any additional setup here if needed\n          },\n        ),\n      ),\n    );\n  }\n}\n")),(0,i.kt)("h2",{id:"radar-map-w-marker"},"Radar Map w/ Marker"),(0,i.kt)("p",null,"Optionally, add assets for a marker. You can download assets ",(0,i.kt)("a",{target:"_blank",href:t(2426).Z},"here"),". Once downloaded, add marker assets to ",(0,i.kt)("inlineCode",{parentName:"p"},"images/")," dir."),(0,i.kt)("p",null,"To add a marker to the map and display text once it's clicked:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-jsx"},'import \'dart:async\';\nimport \'dart:ui\' as ui;\nimport \'package:flutter/material.dart\';\nimport \'package:flutter/services.dart\';\nimport \'package:maplibre_gl/maplibre_gl.dart\';\n\nvoid main() {\n  runApp(RadarMapsDemo());\n}\n\nclass RadarMapsDemo extends StatefulWidget {\n  const RadarMapsDemo({super.key});\n\n  @override\n  RadarMapsState createState() => RadarMapsState();\n}\n\nString style = "radar-default-v1"; // specify styleId here for custom Map style\nString publishableKey = "prj_test_pk_...";\n\nclass RadarMapsState extends State<RadarMapsDemo> {\n  late MapLibreMapController mapController;\n  List<Symbol> markers = [];\n  Symbol? hqMarker;\n  Symbol? selectedMarker;\n  LatLng? infoWindowPosition;\n  bool showInfoWindow = false;\n  String infoWindowText = "";\n  bool isCameraMovingProgrammatically = false;\n\n  @override\n  void initState() {\n    super.initState();\n  }\n\n  // async helper function to load image from assets\n  Future<ui.Image> _loadImage(Uint8List img) async {\n    final Completer<ui.Image> completer = Completer();\n    ui.decodeImageFromList(img, (ui.Image img) {\n      return completer.complete(img);\n    });\n    return completer.future;\n  }\n\n  // helper to prepare images for map use\n  Future<void> _addImageFromAsset(String name, String assetName) async {\n    final ByteData data = await rootBundle.load(assetName);\n    final ui.Image image = await _loadImage(Uint8List.view(data.buffer));\n    final ByteData? byteData = await image.toByteData(format: ui.ImageByteFormat.png);\n    final Uint8List imgBytes = byteData!.buffer.asUint8List();\n    mapController.addImage(name, imgBytes);\n  }\n\n  // Function to add marker on the map\n  void _addMarker(LatLng latLng) async {\n    final Symbol marker = await mapController.addSymbol(\n      SymbolOptions(\n        geometry: latLng,\n        iconImage: "marker",\n        iconSize: 1,\n      ),\n    );\n    markers.add(marker);\n\n    if (latLng == const LatLng(40.7342891, -73.9910334)) {\n      hqMarker = marker;\n    }\n  }\n\n  // Handle tap on marker\n  void _onMarkerTapped(Symbol symbol) {\n    String text = symbol == hqMarker ? "Radar HQ" : "Marker ${markers.indexOf(symbol) + 1}";\n\n    setState(() {\n      selectedMarker = symbol;\n      infoWindowPosition = symbol.options.geometry;\n      showInfoWindow = true;\n      infoWindowText = text;\n    });\n\n    _centerMapOnPosition(symbol.options.geometry!);\n  }\n\n  // Center map on given LatLng\n  void _centerMapOnPosition(LatLng latLng) {\n    setState(() {\n      isCameraMovingProgrammatically = true;\n    });\n\n    mapController.animateCamera(\n      CameraUpdate.newCameraPosition(\n        CameraPosition(target: latLng, zoom: 14.0),\n      ),\n    ).then((_) {\n      Future.delayed(const Duration(seconds: 1), () {\n        setState(() {\n          isCameraMovingProgrammatically = false;\n        });\n      });\n    });\n  }\n\n  // Callback on map initialization\n  void _onMapCreated(MapLibreMapController controller) async {\n    mapController = controller;\n    mapController.onSymbolTapped.add(_onMarkerTapped);\n    await mapController.setSymbolIconAllowOverlap(true);\n    await mapController.setSymbolIconIgnorePlacement(true);\n\n    // Add images for markers\n    await _addImageFromAsset("marker", "images/marker.png");\n\n    // Add HQ marker to the map\n    _addMarker(const LatLng(40.7342891, -73.9910334));\n  }\n\n  @override\n  Widget build(BuildContext context) {\n    return MaterialApp(\n      home: Scaffold(\n        body: Stack(\n          children: [\n            // Map rendering\n            MapLibreMap(\n              styleString: \'https://api.radar.io/maps/styles/$style?publishableKey=$publishableKey\',\n              initialCameraPosition: const CameraPosition(\n                target: LatLng(40.7342891, -73.9910334),\n                zoom: 12.0,\n              ),\n              tiltGesturesEnabled: false,\n              rotateGesturesEnabled: false,\n              onMapCreated: _onMapCreated,\n            ),\n\n            // Info window\n            if (showInfoWindow && infoWindowPosition != null)\n              Positioned(\n                top: MediaQuery.of(context).padding.top + 16,\n                left: 0,\n                right: 0,\n                child: Center(\n                  child: Card(\n                    child: Padding(\n                      padding: const EdgeInsets.all(8),\n                      child: Text(infoWindowText),\n                    ),\n                  ),\n                ),\n              ),\n          ],\n        ),\n      ),\n    );\n  }\n}\n')),(0,i.kt)("p",null,"See our flutter maps ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/radarlabs/radar_flutter_maps_demo"},"example repo")," for more info."))}m.isMDXComponent=!0},2426:function(e,a,t){a.Z=t.p+"assets/files/radar-map-assets-10a2451b64cea4d72fffe99b24b208e8.zip"}}]);