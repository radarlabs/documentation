"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9350],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return h}});var a=n(7294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function p(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),l=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},c=function(e){var t=l(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,i=e.originalType,s=e.parentName,c=p(e,["components","mdxType","originalType","parentName"]),u=l(n),h=r,g=u["".concat(s,".").concat(h)]||u[h]||d[h]||i;return n?a.createElement(g,o(o({ref:t},c),{},{components:n})):a.createElement(g,o({ref:t},c))}));function h(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var i=n.length,o=new Array(i);o[0]=u;var p={};for(var s in t)hasOwnProperty.call(t,s)&&(p[s]=t[s]);p.originalType=e,p.mdxType="string"==typeof e?e:r,o[1]=p;for(var l=2;l<i;l++)o[l]=n[l];return a.createElement.apply(null,o)}return a.createElement.apply(null,n)}u.displayName="MDXCreateElement"},2810:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return p},metadata:function(){return s},toc:function(){return l},default:function(){return d}});var a=n(7462),r=n(3366),i=(n(7294),n(3905)),o={sidebar_position:4,title:"Building an app with location-enabled curbside pickup"},p=void 0,s={unversionedId:"tutorials/building-an-app-with-location-enabled-curbside-pickup",id:"tutorials/building-an-app-with-location-enabled-curbside-pickup",isDocsHomePage:!1,title:"Building an app with location-enabled curbside pickup",description:'In this tutorial, we show you how to use the Radar iOS SDK, geofences, and trip tracking to build a "McRadar\'s" app with location-enabled curbside pickup.',source:"@site/docs/tutorials/building-an-app-with-location-enabled-curbside-pickup.mdx",sourceDirName:"tutorials",slug:"/tutorials/building-an-app-with-location-enabled-curbside-pickup",permalink:"/tutorials/building-an-app-with-location-enabled-curbside-pickup",editUrl:"https://github.com/radarlabs/docs/edit/main/docs/tutorials/building-an-app-with-location-enabled-curbside-pickup.mdx",tags:[],version:"current",sidebarPosition:4,frontMatter:{sidebar_position:4,title:"Building an app with location-enabled curbside pickup"},sidebar:"defaultSidebar",previous:{title:"Showing a notification when a user enters a geofence",permalink:"/tutorials/showing-a-notification-when-a-user-enters-a-geofence"},next:{title:"Building a delivery tracking app",permalink:"/tutorials/building-a-delivery-tracking-app"}},l=[{value:"Languages used",id:"languages-used",children:[]},{value:"Features used",id:"features-used",children:[]},{value:"Steps",id:"steps",children:[{value:"Step 1: Sign up for Radar",id:"step-1-sign-up-for-radar",children:[]},{value:"Step 2: Import geofences",id:"step-2-import-geofences",children:[]},{value:"Step 3: Install the Radar iOS SDK",id:"step-3-install-the-radar-ios-sdk",children:[]},{value:"Step 4: Start tracking and start a trip",id:"step-4-start-tracking-and-start-a-trip",children:[]},{value:"Step 5: Display live ETAs in the trip tracking dashboard",id:"step-5-display-live-etas-in-the-trip-tracking-dashboard",children:[]},{value:"Step 6: Stop tracking and stop the trip",id:"step-6-stop-tracking-and-stop-the-trip",children:[]}]},{value:"Sample code",id:"sample-code",children:[]},{value:"Support",id:"support",children:[]}],c={toc:l};function d(e){var t=e.components,n=(0,r.Z)(e,["components"]);return(0,i.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("p",null,"In this tutorial, we show you how to use the Radar ",(0,i.kt)("a",{parentName:"p",href:"/sdk"},"iOS SDK"),", ",(0,i.kt)("a",{parentName:"p",href:"/geofences"},"geofences"),", and ",(0,i.kt)("a",{parentName:"p",href:"/trip-tracking"},"trip tracking"),' to build a "McRadar\'s" app with location-enabled curbside pickup.'),(0,i.kt)("h2",{id:"languages-used"},"Languages used"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Swift")),(0,i.kt)("h2",{id:"features-used"},"Features used"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/sdk/ios"},"iOS SDK")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/geofences"},"Geofences")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/trip-tracking"},"Trip tracking"))),(0,i.kt)("h2",{id:"steps"},"Steps"),(0,i.kt)("h3",{id:"step-1-sign-up-for-radar"},"Step 1: Sign up for Radar"),(0,i.kt)("p",null,"If you haven't already, sign up for Radar to get your API key. You can create up to 1,000 geofences and make up to 100,000 API requests per month for free."),(0,i.kt)("a",{className:"btn btn-large btn-primary",href:"https://radar.com/signup"},"Get API keys"),(0,i.kt)("h3",{id:"step-2-import-geofences"},"Step 2: Import geofences"),(0,i.kt)("p",null,"On the ",(0,i.kt)("a",{parentName:"p",href:"https://radar.com/dashboard"},"Geofences page"),", create a geofence for a McRadar's location. In this case, use ",(0,i.kt)("inlineCode",{parentName:"p"},"restaurant")," for the geofence ",(0,i.kt)("inlineCode",{parentName:"p"},"tag")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"123")," for the geofence ",(0,i.kt)("inlineCode",{parentName:"p"},"externalId"),"."),(0,i.kt)("h3",{id:"step-3-install-the-radar-ios-sdk"},"Step 3: Install the Radar iOS SDK"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"/sdk"},"Install the Radar SDK")," using CocoaPods or Carthage (recommended) or by ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/radarlabs/radar-sdk-ios/releases"},"downloading the framework")," and dragging it into your project."),(0,i.kt)("p",null,"Initialize the SDK in your ",(0,i.kt)("inlineCode",{parentName:"p"},"AppDelegate")," class with your publishable API key, then request location permissions."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'import UIKit\nimport CoreLocation\nimport RadarSDK\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n    let locationManager = CLLocationManager()\n\n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n        Radar.initialize(publishableKey: "prj_test_pk_...")\n\n        self.locationManager.requestWhenInUseAuthorization()\n\n        return true\n    }\n\n}\n')),(0,i.kt)("h3",{id:"step-4-start-tracking-and-start-a-trip"},"Step 4: Start tracking and start a trip"),(0,i.kt)("p",null,'When the user places an order and taps "I\'m on my way," start tracking to start live location tracking, start a trip to the destination geofence. Use the order ID, in this case ',(0,i.kt)("inlineCode",{parentName:"p"},"456"),", for the trip ",(0,i.kt)("inlineCode",{parentName:"p"},"externalId"),"."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'let tripOptions = RadarTripOptions(externalId: "456")\ntripOptions.destinationGeofenceTag = "restaurant"\ntripOptions.destinationGeofenceExternalId = "123"\ntripOptions.mode = .car\nRadar.startTrip(options: tripOptions, trackingOptions: .presetContinuous)\n')),(0,i.kt)("p",null,"Optionally, instead of calling ",(0,i.kt)("inlineCode",{parentName:"p"},"Radar.startTracking()"),", we can simulate a sequence of location updates from an origin to a destination with ",(0,i.kt)("inlineCode",{parentName:"p"},"Radar.mockTracking()"),". For example, to simulate a sequence of 10 location updates every 3 seconds by car from an ",(0,i.kt)("inlineCode",{parentName:"p"},"origin")," to a ",(0,i.kt)("inlineCode",{parentName:"p"},"destination"),", we can call:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.mockTracking(\n  origin: CLLocation(latitude: 40.714708, longitude: -74.035807),\n  destination: CLLocation(latitude: 40.717410, longitude: -74.053334),\n  mode: .car,\n  steps: 10,\n  interval: 3) { (status, location, events, user) in\n\n}\n")),(0,i.kt)("h3",{id:"step-5-display-live-etas-in-the-trip-tracking-dashboard"},"Step 5: Display live ETAs in the trip tracking dashboard"),(0,i.kt)("p",null,"Display live ETAs on the trip tracking dashboard, available on the ",(0,i.kt)("a",{parentName:"p",href:"https://radar.com/pricing"},"Enterprise")," plan. Or, display live ETAs in your own UI by polling the ",(0,i.kt)("a",{parentName:"p",href:"/api#list-trips"},"list trips API")," or listening for ",(0,i.kt)("a",{parentName:"p",href:"/trip-tracking#trip-events"},"trip events")," sent to a webhook."),(0,i.kt)("h3",{id:"step-6-stop-tracking-and-stop-the-trip"},"Step 6: Stop tracking and stop the trip"),(0,i.kt)("p",null,'When the user taps "I\'m here" or when the order is picked up, complete the trip and stop tracking.'),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},"Radar.completeTrip()\nRadar.stopTracking()\n")),(0,i.kt)("h2",{id:"sample-code"},"Sample code"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'// AppDelegate.swift\n\nimport UIKit\nimport CoreLocation\nimport RadarSDK\n\n@UIApplicationMain\nclass AppDelegate: UIResponder, UIApplicationDelegate {\n\n    let locationManager = CLLocationManager()\n\n    func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplication.LaunchOptionsKey: Any]?) -> Bool {\n        Radar.initialize(publishableKey: "prj_test_pk_...")\n\n        self.locationManager.requestWhenInUseAuthorization()\n\n        return true\n    }\n\n}\n')),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-swift"},'// ViewController.swift\n\nimport UIKit\nimport RadarSDK\n\nclass ViewController: UIViewController {\n\n    var pickupStarted = false\n\n    @IBAction func didTapButton(button: UIButton) {\n        if !pickupStarted {\n            let tripOptions = RadarTripOptions(externalId: "456")\n            tripOptions.destinationGeofenceTag = "restaurant"\n            tripOptions.destinationGeofenceExternalId = "123"\n            tripOptions.mode = .car\n            Radar.startTrip(options: tripOptions, trackingOptions: .presetContinuous)\n            sender.setTitle("I\'m here", for: .normal)\n            pickupStarted = true\n        } else {\n            Radar.completeTrip()\n            Radar.stopTracking()\n            sender.setTitle("I\'m here", for: .normal)\n            pickupStarted = false\n        }\n    }\n\n}\n')),(0,i.kt)("h2",{id:"support"},"Support"),(0,i.kt)("p",null,"Have questions or feedback on this documentation? Let us know! Contact us at ",(0,i.kt)("a",{parentName:"p",href:"https://radar.com/support"},"radar.com/support"),"."))}d.isMDXComponent=!0}}]);